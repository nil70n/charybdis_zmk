#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

// / {
//     chosen { zmk,matrix_transform = &default_transform; };
// };

/ {
    /* input config for mouse move mode */

    trackball_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <0 1>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <2>;
    };

    /* input config for mouse scroll mode */

    trackball_scroll_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <2>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_MISC>;
        y-input-code = <INPUT_REL_WHEEL>;
        y-invert;
        bindings = <&ib_wheel_scaler 1 14>;
    };

    /* define a resolution down scaler only for INPUT_REL_WHEEL */

    ib_wheel_scaler: ib_wheel_scaler {
        compatible = "zmk,input-behavior-scaler";
        #binding-cells = <2>;
        evt-type = <INPUT_EV_REL>;
        input-code = <INPUT_REL_WHEEL>;
    };

    /* adjust cooldown waiting period for mouse key layer after activated */

    ib_toggle_layer: ib_toggle_layer {
        compatible = "zmk,input-behavior-tog-layer";
        #binding-cells = <1>;
        time-to-live-ms = <750>;
    };

    // #define QUERTY    0
    // #define FUNCTIONS 1
    // #define SCROLL    2

    combos {
        compatible = "zmk,combos";

        rh_leftClick {
            bindings = <&mkp LCLK>;
            key-positions = <43 44>;
        };

        rh_rightClick {
            bindings = <&mkp RCLK>;
            key-positions = <44 45>;
        };

        rh_middleClick {
            bindings = <&mkp MCLK>;
            key-positions = <44 45 43>;
        };

        lh_leftClick {
            bindings = <&mkp LCLK>;
            key-positions = <40 39>;
        };

        lh_rightClick {
            bindings = <&mkp RCLK>;
            key-positions = <38 39>;
        };

        lh_middleClick {
            bindings = <&mkp MCLK>;
            key-positions = <38 39 40>;
        };
        
        CAPSY {
            bindings = <&kp CAPSLOCK>;
            key-positions = <24 25>;
        };
        
        caps_word {
            bindings = <&caps_word>;
            key-positions = <36 37>;
        };

        PRINTSC {
            bindings = <&kp PSCRN>;
            key-positions = <10 11>;
        };

        RAISE {
            bindings = <&tog 1>;
            key-positions = <46 47>;
        };
    };

    behaviors {
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <190>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 48 49 50 53 54 51 52 55>;
            hold-trigger-on-release;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <190>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <48 49 50 53 54 51 52 55 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 42 43 44 45 46 47 51 52>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp GRAVE   &kp N1        &kp N2         &kp N3        &kp N4        &kp N5            &kp N6       &kp N7              &kp N8            &kp N9            &kp N0                          &kp MINUS
&kp LBKT    &kp Q         &kp W          &kp E         &kp R         &kp T             &kp Y        &kp U               &kp I             &kp O             &kp P                           &kp EQUAL
&kp RBKT    &hml LCTRL A  &hml LSHFT S   &hml LGUI D   &hml LALT F   &kp G             &kp H        &hmr RALT J         &hmr RGUI K       &hmr RSHFT L      &hmr RCTRL SEMI                 &kp SQT
&sk LSHFT   &kp Z         &kp X          &kp C         &kp V         &kp B             &kp N        &kp M               &kp COMMA         &kp DOT           &kp SLASH                       &lt 2 BSLH
                                                       &kp ESC       &kp SPACE         &kp LGUI     &kp ENTER           &kp BSPC
                                                                     &kp TAB           &lt 1 F5     &kp DEL
            >;

            label = "QUERTY";
        };

        raise_layer {
            bindings = <
&out OUT_USB  &kp F1        &kp F2         &kp F3        &kp F4        &kp F5          &kp F6    &kp F7     &kp F8     &kp F9     &kp F10  &kp F11
&out OUT_BLE  &trans        &trans         &trans        &trans        &trans          &trans    &trans     &trans     &trans     &trans   &kp F12
&bt BT_PRV    &trans        &trans         &trans        &trans        &trans          &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &trans   &kp RCTRL
&bt BT_NXT    &trans        &trans         &trans        &trans        &trans          &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &trans   &kp RGUI
                                           &bt BT_CLR    &trans        &trans          &trans    &trans
                                                         &mkp LCLK     &mkp RCLK       &INS
            >;

            label = "FUNCTIONS";
        };

        scroll_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans
                                &trans  &trans    &trans
            >;

            label = "SCROLL";
        };
    };
};
